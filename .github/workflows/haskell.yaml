name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.1.1
    - uses: haskell-actions/setup@v2.6.1
      with:
        ghc-version: 9.8.1
        cabal-version: latest

    - name: Cache
      uses: actions/cache@v4.0.0
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Cabal check
      run: |
        cabal check | grep 'No errors or warnings could be found'
    - name: Install dependencies
      run: |
        cabal update
        cabal \
          --only-dependencies \
          --enable-tests \
          --enable-benchmarks \
          --enable-optimization=1 \
          build
    - name: Build
      run: |
        cabal build \
          --enable-tests \
          --enable-benchmarks \
          --enable-optimization=1 \
          all
    - name: Run tests
      run: |
        cabal test \
          --enable-optimization=1 \
          all

  build-oldest:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.1.1
    - uses: haskell-actions/setup@v2.6.1
      with:
        ghc-version: 9.4.7
        cabal-version: latest

    - name: Cache
      uses: actions/cache@v4.0.0
      env:
        cache-name: cache-cabal-oldest
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install oldest dependencies
      run: |
        cabal update
        cabal \
          --only-dependencies \
          --enable-tests \
          --enable-benchmarks \
          --enable-optimization=1 \
          --prefer-oldest \
          build
    - name: Build with oldest
      run: |
        cabal build \
          --enable-tests \
          --enable-benchmarks \
          --enable-optimization=1 \
          --prefer-oldest \
          all
    - name: Run tests with oldest dependencies
      run: |
        cabal test \
          --enable-optimization=1 \
          --prefer-oldest \
          --enable-tests \
          all
